// <auto-generated />
using System;
using Library.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Library.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Library.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookSubscritpion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberAvailable")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "Liza Marklund",
                            BookTitle = "Kallmyren",
                            ImageUrl = "\\Images\\Kallmyren.jpg",
                            NumberAvailable = 2
                        },
                        new
                        {
                            BookId = 2,
                            Author = "Jussi Adler Olsen",
                            BookTitle = "Natriumklorid",
                            ImageUrl = "\\Images\\Natriumklorid.jpg",
                            NumberAvailable = 1
                        },
                        new
                        {
                            BookId = 3,
                            Author = "Christina Larsson",
                            BookTitle = "Agenturen",
                            ImageUrl = "\\Images\\Agenturen.jpg",
                            NumberAvailable = 2
                        },
                        new
                        {
                            BookId = 4,
                            Author = "Frida Skybäck",
                            BookTitle = "Svartfågel",
                            ImageUrl = "\\Images\\Svartfagel.jpg",
                            NumberAvailable = 3
                        },
                        new
                        {
                            BookId = 5,
                            Author = "Lars Keppler",
                            BookTitle = "Spegelmannen",
                            ImageUrl = "\\Images\\Spegelmannen.jpg",
                            NumberAvailable = 2
                        });
                });

            modelBuilder.Entity("Library.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerFirstName = "Anna",
                            CustomerLastName = "Andersson",
                            PhoneNumber = "0723456789"
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerFirstName = "Björn",
                            CustomerLastName = "Andersson",
                            PhoneNumber = "0723456790"
                        },
                        new
                        {
                            CustomerId = 3,
                            CustomerFirstName = "Albin",
                            CustomerLastName = "Karlsson",
                            PhoneNumber = "0729876543"
                        });
                });

            modelBuilder.Entity("Library.Models.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateForLoan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateForReturn")
                        .HasColumnType("datetime2");

                    b.HasKey("LoanId");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("Library.Models.Loan", b =>
                {
                    b.HasOne("Library.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.Customer", "Customer")
                        .WithMany("Loans")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
